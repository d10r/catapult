// src/scripts/xcall.ts
const { ethers } = require("hardhat");

async function main() {
  // setup signers
  const [deployer] = await ethers.getSigners();

  // see https://docs.connext.network/resources/deployments
  const destinationDomain = process.env.DEST || 1735353714; // defaults to gÃ¶rli

  const targetAddr = process.env.MODULE; // the zodiac connext module
  const target = ethers.utils.getAddress(targetAddr);

  // TODO: what to put here?
  // see https://docs.connext.network/developers/guides/estimating-fees
  // mumbai relayer threshold seems to be around 0.09
  const relayerFee = ethers.utils.parseEther('0.1');
  
  // upgrade 1 fDAI, then set flowrate to 1 gwad to account 0xC20a5455035Ab593682Cf9b9916b9407cc9e47f3
  const callData = '0x82ad56cb0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000020000000000000000000000000088271d333c72e51516b67f5567c728e702b3eee8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000044095ea7b3000000000000000000000000f2d68898557ccb2cf4c10c3ef2b034b2a69dad000000000000000000000000000000000000000000000000000de0b6b3a764000000000000000000000000000000000000000000000000000000000000000000000000000000000000f2d68898557ccb2cf4c10c3ef2b034b2a69dad0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000002445977d030000000000000000000000000000000000000000000000000de0b6b3a764000000000000000000000000000000000000000000000000000000000000000000000000000000000000cfa132e353cb4e398080b9700609bb008eceb12500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000006457e6aa36000000000000000000000000f2d68898557ccb2cf4c10c3ef2b034b2a69dad00000000000000000000000000c20a5455035ab593682cf9b9916b9407cc9e47f3000000000000000000000000000000000000000000000000000000003b9aca0000000000000000000000000000000000000000000000000000000000';

  // connext contract address
  const connextAddress = process.env.CONNEXTSRC;

  // setup Connext interface
  const connextAbi = [
    'function xcall(uint32,address,address,address,uint256,uint256,bytes) external payable returns (bytes32)',
  ];
  const connext = new ethers.Contract(connextAddress, connextAbi, deployer);

  // execute the xcall operation
  const tx = await connext.xcall(
    destinationDomain,
    target,
    ethers.constants.AddressZero, // no asset bridged for now (TODO: check testnet pairs)
    deployer.address,
    0, // amount 0 for now
    0, // 0 without asset - is bps, e.g. 30 would be 0.3%
    callData,
    { value: relayerFee }
  );

  console.log(`xcall executed in transaction ${tx.hash}`);

  // wait for transaction to be mined
  const receipt = await tx.wait();
  console.log(`Transaction was mined in block ${receipt.blockNumber}`);
}

main()
  .then(() => process.exit(0))
  .catch((error) => {
    console.error(error);
    process.exit(1);
  });
